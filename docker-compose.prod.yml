version: "3.8"

services:
  codeex-db:
    image: postgres
    container_name: codeex-db
    restart: unless-stopped
    volumes:
      - codeex-db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5432:5432

  codeex-cache:
    image: redis
    container_name: codeex-cache
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - codeex-db_cache:/data

  codeex-nginx:
    build: ./nginx
    container_name: codeex-nginx
    restart: always
    ports:
      - 8080:80
    depends_on:
      - codeex-app

  codeex-app:
    container_name: codeex-app
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
    env_file:
      - ./.env
    volumes:
      - ./api:/home/app/
      - /home/app/node_modules/
    ports:
      - 3001:3001
    depends_on:
      - codeex-db
      - codeex-cache

volumes:
  codeex-db_data:
  codeex-db_cache:
